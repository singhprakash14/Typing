{"ast":null,"code":"var _jsxFileName = \"/home/home/Desktop/vuejs/map/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`https://restcountries.com/v3.1/name/${searchQuery}`);\n      if (response.data.length > 0) {\n        setSelectedCountry(response.data[0]);\n        console.log();\n      } else {\n        setSelectedCountry(null);\n        console.log(\"Country not found\");\n      }\n    } catch (error) {\n      console.log(\"Error fetching country data:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleClick = async e => {\n    const {\n      lat,\n      lng\n    } = e.latlng;\n    try {\n      const response = await axios.get(`https://restcountries.com/v3.1/alpha?latlng=${lat},${lng}`);\n      setSelectedCountry(response.data);\n    } catch (error) {\n      console.log(\"Error fetching country data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a country...\",\n        value: searchQuery,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\"> OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        style: {\n          color: \"#3388ff\",\n          weight: 1\n        },\n        onEachFeature: (feature, layer) => {\n          layer.bindPopup(feature.properties.name);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), selectedCountry ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedCountry.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capital: \", selectedCountry.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Population: \", selectedCountry.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Area: \", selectedCountry.area, \" km\\xB2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Languages: \", Object.values(selectedCountry.languages).join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No country found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"pfOX+x7Q7vVv0J0baH9PwgTk4mE=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","GeoJSON","axios","jsxDEV","_jsxDEV","Map","_s","selectedCountry","setSelectedCountry","searchQuery","setSearchQuery","handleSearch","response","get","data","length","console","log","error","handleInputChange","e","target","value","handleClick","lat","lng","latlng","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","style","height","width","url","attribution","color","weight","onEachFeature","feature","layer","bindPopup","properties","name","common","capital","population","area","Object","values","languages","join","_c","$RefreshReg$"],"sources":["/home/home/Desktop/vuejs/map/src/components/map.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport axios from \"axios\";\n\nconst Map = () => {\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\nconst handleSearch = async () => {\n  try {\n    const response = await axios.get(\n      `https://restcountries.com/v3.1/name/${searchQuery}`\n    );\n    if (response.data.length > 0) {\n      setSelectedCountry(response.data[0]);\n      console.log()\n    } else {\n      setSelectedCountry(null);\n      console.log(\"Country not found\");\n    }\n  } catch (error) {\n    console.log(\"Error fetching country data:\", error);\n  }\n};\n\n  const handleInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleClick = async (e) => {\n    const { lat, lng } = e.latlng;\n    try {\n      const response = await axios.get(\n        `https://restcountries.com/v3.1/alpha?latlng=${lat},${lng}`\n      );\n      setSelectedCountry(response.data);\n    } catch (error) {\n      console.log(\"Error fetching country data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for a country...\"\n          value={searchQuery}\n          onChange={handleInputChange}\n        />\n        <button onClick={handleSearch}>Search</button>\n      \n      </div>\n      <MapContainer\n        center={[0, 0]}\n        zoom={2}\n        style={{ height: \"100vh\", width: \"100%\" }}\n        onClick={handleClick}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">\n            OpenStreetMap</a> contributors'\n        />\n        <GeoJSON\n          style={{ color: \"#3388ff\", weight: 1 }}\n          onEachFeature={(feature, layer) => {\n            layer.bindPopup(feature.properties.name);\n          }}\n        />\n        {selectedCountry ? (\n          <div >\n            <h2>{selectedCountry.name.common}</h2>\n            <p>Capital: {selectedCountry.capital}</p>\n            <p>Population: {selectedCountry.population}</p>\n            <p>Area: {selectedCountry.area} kmÂ²</p>\n            <p>\n              Languages: {Object.values(selectedCountry.languages).join(\", \")}\n            </p>\n            {/* Add more country details as needed */}\n          </div>\n        ) : (\n          <div>\n            <p>No country found</p>\n          </div>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}