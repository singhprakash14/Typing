{"ast":null,"code":"var _jsxFileName = \"/home/home/Desktop/vuejs/map/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const handleClick = async e => {\n    const {\n      lat,\n      lng\n    } = e.latlng;\n    const response = await axios.get(`https://restcountries.com/v2/alpha?latlng=${lat},${lng}`);\n    setSelectedCountry(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [0, 0],\n    zoom: 2,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\"> OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      style: {\n        color: \"#3388ff\",\n        weight: 1\n      },\n      onEachFeature: (feature, layer) => {\n        layer.bindPopup(feature.properties.name);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedCountry.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", selectedCountry.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Population: \", selectedCountry.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Area: \", selectedCountry.area, \" km\\xB2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Languages:\", \" \", selectedCountry.languages.map(lang => lang.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"O8EnlKBO1L4ROr1lPlGXx/LnUQ4=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","GeoJSON","axios","jsxDEV","_jsxDEV","Map","_s","selectedCountry","setSelectedCountry","handleClick","e","lat","lng","latlng","response","get","data","center","zoom","style","height","width","onClick","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","onEachFeature","feature","layer","bindPopup","properties","name","className","capital","population","area","languages","map","lang","join","_c","$RefreshReg$"],"sources":["/home/home/Desktop/vuejs/map/src/components/map.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport axios from \"axios\";\n\nconst Map = () => {\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  const handleClick = async (e) => {\n    const { lat, lng } = e.latlng;\n    const response = await axios.get(\n      `https://restcountries.com/v2/alpha?latlng=${lat},${lng}`\n    );\n    setSelectedCountry(response.data);\n  };\n\n  return (\n    <MapContainer\n      center={[0, 0]}\n      zoom={2}\n      style={{ height: \"100vh\", width: \"100%\" }}\n      onClick={handleClick}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">\n          OpenStreetMap</a> contributors'\n      />\n      <GeoJSON\n        style={{ color: \"#3388ff\", weight: 1 }}\n        onEachFeature={(feature, layer) => {\n          layer.bindPopup(feature.properties.name);\n        }}\n      />\n      {selectedCountry && (\n        <div className=\"country-details\">\n          <h2>{selectedCountry.name}</h2>\n          <p>Capital: {selectedCountry.capital}</p>\n          <p>Population: {selectedCountry.population}</p>\n          <p>Area: {selectedCountry.area} kmÂ²</p>\n          <p>\n            Languages:{\" \"}\n            {selectedCountry.languages.map((lang) => lang.name).join(\", \")}\n          </p>\n          {/* Add more country details as needed */}\n        </div>\n      )}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAChE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/B,MAAM;MAAEC,GAAG;MAAEC;IAAI,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC7B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,6CAA4CJ,GAAI,IAAGC,GAAI,EAC1D,CAAC;IACDJ,kBAAkB,CAACM,QAAQ,CAACE,IAAI,CAAC;EACnC,CAAC;EAED,oBACEZ,OAAA,CAACL,YAAY;IACXkB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;IACfC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAC1CC,OAAO,EAAEb,WAAY;IAAAc,QAAA,gBAErBnB,OAAA,CAACJ,SAAS;MACRwB,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IACqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFzB,OAAA,CAACH,OAAO;MACNkB,KAAK,EAAE;QAAEW,KAAK,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAE,CAAE;MACvCC,aAAa,EAAEA,CAACC,OAAO,EAAEC,KAAK,KAAK;QACjCA,KAAK,CAACC,SAAS,CAACF,OAAO,CAACG,UAAU,CAACC,IAAI,CAAC;MAC1C;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDtB,eAAe,iBACdH,OAAA;MAAKkC,SAAS,EAAC,iBAAiB;MAAAf,QAAA,gBAC9BnB,OAAA;QAAAmB,QAAA,EAAKhB,eAAe,CAAC8B;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/BzB,OAAA;QAAAmB,QAAA,GAAG,WAAS,EAAChB,eAAe,CAACgC,OAAO;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCzB,OAAA;QAAAmB,QAAA,GAAG,cAAY,EAAChB,eAAe,CAACiC,UAAU;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CzB,OAAA;QAAAmB,QAAA,GAAG,QAAM,EAAChB,eAAe,CAACkC,IAAI,EAAC,SAAI;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvCzB,OAAA;QAAAmB,QAAA,GAAG,YACS,EAAC,GAAG,EACbhB,eAAe,CAACmC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACP,IAAI,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEnB,CAAC;AAACvB,EAAA,CA5CID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}