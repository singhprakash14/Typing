{"ast":null,"code":"var _jsxFileName = \"/home/home/Desktop/vuejs/map/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [countryDetails, setCountryDetails] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    if (selectedCountry) {\n      fetchCountryDetails(selectedCountry);\n    }\n  }, [selectedCountry]);\n  const fetchCountryDetails = async countryCode => {\n    try {\n      const response = await axios.get(`https://restcountries.com/v3.1/alpha/${countryCode}`);\n      setCountryDetails(response.data);\n    } catch (error) {\n      console.error(\"Error fetching country details:\", error);\n      // Handle error and show a user-friendly message\n    }\n  };\n\n  const handleCountryClick = e => {\n    const countryCode = e.target.feature.properties.iso_a2;\n    setSelectedCountry(countryCode);\n  };\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    // Perform search based on the query\n    // For simplicity, let's assume the query is the country name\n    const country = countries.find(country => country.name.common.toLowerCase() === searchQuery.toLowerCase());\n    if (country) {\n      setSelectedCountry(country.cca2);\n      setSearchQuery(\"\");\n    } else {\n      // Handle error if the country is not found\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"World Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a country\",\n        value: searchQuery,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: \"400px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: countriesGeoJSON,\n        onClick: handleCountryClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), countryDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: countryDetails.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", countryDetails.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Population: \", countryDetails.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Area: \", countryDetails.area, \" sq km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Languages: \", Object.values(countryDetails.languages).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currency:\", \" \", countryDetails.currencies[Object.keys(countryDetails.currencies)[0]].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"DqkIW7kfe4QmUlfnno+aR2wX3OU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","GeoJSON","axios","jsxDEV","_jsxDEV","Map","_s","selectedCountry","setSelectedCountry","countryDetails","setCountryDetails","searchQuery","setSearchQuery","fetchCountryDetails","countryCode","response","get","data","error","console","handleCountryClick","e","target","feature","properties","iso_a2","handleSearchChange","value","handleSearchSubmit","preventDefault","country","countries","find","name","common","toLowerCase","cca2","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","center","zoom","style","height","width","url","countriesGeoJSON","onClick","capital","population","area","Object","values","languages","join","currencies","keys","_c","$RefreshReg$"],"sources":["/home/home/Desktop/vuejs/map/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport axios from \"axios\";\n\nconst Map = () => {\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [countryDetails, setCountryDetails] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    if (selectedCountry) {\n      fetchCountryDetails(selectedCountry);\n    }\n  }, [selectedCountry]);\n\n  const fetchCountryDetails = async (countryCode) => {\n    try {\n      const response = await axios.get(\n        `https://restcountries.com/v3.1/alpha/${countryCode}`\n      );\n      setCountryDetails(response.data);\n    } catch (error) {\n      console.error(\"Error fetching country details:\", error);\n      // Handle error and show a user-friendly message\n    }\n  };\n\n  const handleCountryClick = (e) => {\n    const countryCode = e.target.feature.properties.iso_a2;\n    setSelectedCountry(countryCode);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    // Perform search based on the query\n    // For simplicity, let's assume the query is the country name\n    const country = countries.find(\n      (country) =>\n        country.name.common.toLowerCase() === searchQuery.toLowerCase()\n    );\n    if (country) {\n      setSelectedCountry(country.cca2);\n      setSearchQuery(\"\");\n    } else {\n      // Handle error if the country is not found\n    }\n  };\n\n  return (\n    <div>\n      <h1>World Map</h1>\n      <form onSubmit={handleSearchSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a country\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MapContainer\n        center={[0, 0]}\n        zoom={2}\n        style={{ height: \"400px\", width: \"100%\" }}\n      >\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        <GeoJSON data={countriesGeoJSON} onClick={handleCountryClick} />\n      </MapContainer>\n      {countryDetails && (\n        <div>\n          <h2>{countryDetails.name.common}</h2>\n          <p>Capital: {countryDetails.capital}</p>\n          <p>Population: {countryDetails.population}</p>\n          <p>Area: {countryDetails.area} sq km</p>\n          <p>Languages: {Object.values(countryDetails.languages).join(\", \")}</p>\n          <p>\n            Currency:{\" \"}\n            {\n              countryDetails.currencies[\n                Object.keys(countryDetails.currencies)[0]\n              ].name\n            }\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}