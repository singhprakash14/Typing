{"ast":null,"code":"var _jsxFileName = \"/home/home/Desktop/vuejs/map/src/Button.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button() {\n  _s();\n  const [status, setStatus] = useState(\"waiting\");\n  function start() {\n    if (status === \"finished\") {\n      setWords(generateWords());\n      setCurrWordIndex(0);\n      setCorrect(0);\n      setIncorrect(0);\n      setCurrCharIndex(-1);\n      setCurrChar(\"\");\n    }\n    if (status != \"started\") {\n      setStatus(\"started\");\n      let interval = setInterval(() => {\n        setCountDown(prevCountdown => {\n          if (prevCountdown == 0) {\n            clearInterval(interval);\n            setStatus(\"finished\");\n            setCurrInput(\"\");\n            return SECONDS;\n          } else {\n            return prevCountdown - 1;\n          }\n        });\n      }, 1000);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Button, \"+PqRCScXlvaCtiS1duh35hzgSUU=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Button","_s","status","setStatus","start","setWords","generateWords","setCurrWordIndex","setCorrect","setIncorrect","setCurrCharIndex","setCurrChar","interval","setInterval","setCountDown","prevCountdown","clearInterval","setCurrInput","SECONDS","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/home/Desktop/vuejs/map/src/Button.js"],"sourcesContent":["import React,{useState} from 'react'\n\n function Button() {\n const [status, setStatus] = useState(\"waiting\");\n\n\n function start() {\n      if (status === \"finished\") {\n        setWords(generateWords());\n        setCurrWordIndex(0);\n        setCorrect(0);\n        setIncorrect(0);\n        setCurrCharIndex(-1);\n        setCurrChar(\"\");\n      }\n\n      if (status != \"started\") {\n        setStatus(\"started\");\n        let interval = setInterval(() => {\n          setCountDown((prevCountdown) => {\n            if (prevCountdown == 0) {\n              clearInterval(interval);\n              setStatus(\"finished\");\n              setCurrInput(\"\");\n              return SECONDS;\n            } else {\n              return prevCountdown - 1;\n            }\n          });\n        }, 1000);\n      }\n    }\n\n  return (\n    <div>\n      <button className=\"button\" onClick={start}>\n        Start\n      </button>\n    </div>\n  );\n}\nexport default Button;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,SAAS,CAAC;EAG/C,SAASO,KAAKA,CAAA,EAAG;IACZ,IAAIF,MAAM,KAAK,UAAU,EAAE;MACzBG,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;MACzBC,gBAAgB,CAAC,CAAC,CAAC;MACnBC,UAAU,CAAC,CAAC,CAAC;MACbC,YAAY,CAAC,CAAC,CAAC;MACfC,gBAAgB,CAAC,CAAC,CAAC,CAAC;MACpBC,WAAW,CAAC,EAAE,CAAC;IACjB;IAEA,IAAIT,MAAM,IAAI,SAAS,EAAE;MACvBC,SAAS,CAAC,SAAS,CAAC;MACpB,IAAIS,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/BC,YAAY,CAAEC,aAAa,IAAK;UAC9B,IAAIA,aAAa,IAAI,CAAC,EAAE;YACtBC,aAAa,CAACJ,QAAQ,CAAC;YACvBT,SAAS,CAAC,UAAU,CAAC;YACrBc,YAAY,CAAC,EAAE,CAAC;YAChB,OAAOC,OAAO;UAChB,CAAC,MAAM;YACL,OAAOH,aAAa,GAAG,CAAC;UAC1B;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;EACF;EAEF,oBACEhB,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAQqB,SAAS,EAAC,QAAQ;MAACC,OAAO,EAAEjB,KAAM;MAAAe,QAAA,EAAC;IAE3C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CAtCSD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAuChB,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}