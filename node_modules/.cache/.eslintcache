[{"/home/home/Desktop/vuejs/map/src/index.js":"1","/home/home/Desktop/vuejs/map/src/App.js":"2","/home/home/Desktop/vuejs/map/src/components/Typing.js":"3","/home/home/Desktop/vuejs/Typing/src/index.js":"4","/home/home/Desktop/vuejs/Typing/src/App.js":"5","/home/home/Desktop/vuejs/Typing/src/components/Typing.js":"6","/home/home/Desktop/vuejs/Typing/src/components/Navbar.js":"7"},{"size":498,"mtime":1686194535533,"results":"8","hashOfConfig":"9"},{"size":158,"mtime":1686197826022,"results":"10","hashOfConfig":"9"},{"size":5528,"mtime":1686197761742,"results":"11","hashOfConfig":"9"},{"size":498,"mtime":1686194535533,"results":"12","hashOfConfig":"13"},{"size":215,"mtime":1686211742595,"results":"14","hashOfConfig":"13"},{"size":5528,"mtime":1686197761742,"results":"15","hashOfConfig":"13"},{"size":705,"mtime":1686242390078,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"340njp",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"egi6eu",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/home/home/Desktop/vuejs/map/src/index.js",[],[],"/home/home/Desktop/vuejs/map/src/App.js",[],[],"/home/home/Desktop/vuejs/map/src/components/Typing.js",[],[],"/home/home/Desktop/vuejs/Typing/src/index.js",[],[],"/home/home/Desktop/vuejs/Typing/src/App.js",[],[],"/home/home/Desktop/vuejs/Typing/src/components/Typing.js",[],[],"/home/home/Desktop/vuejs/Typing/src/components/Navbar.js",["39"],[],"import React, { useState } from \"react\";\nimport \"./Navbar.css\";\nimport Img1 from \"../components/image/slide-1.png\"\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleNavbar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-logo\">\n        <img src={Img1}/>\n      </div>\n      <div className={`navbar-links ${isOpen ? \"active\" : \"\"}`}> \n       <a href=\"#typing\">Typing Tutor</a>\n        <a href=\"#typingTest\">Typing Test</a>\n      </div>\n      <button className=\"navbar-toggle\" onClick={toggleNavbar}>\n        <span className=\"navbar-toggle-icon\"></span>\n      </button>\n    </nav>\n  );\n};\n\nexport default Navbar;\n",{"ruleId":"40","severity":1,"message":"41","line":14,"column":9,"nodeType":"42","endLine":14,"endColumn":26},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]